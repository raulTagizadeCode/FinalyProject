@using Project.BL.DTOs.BasketItemDTOs
@model BasketDto;
<!-- Page Title -->
<div class="page-title dark-background" style="background-image: url(assets/img/page-title-bg.jpg);">
	<div class="container position-relative">
		<h1>Basket</h1>
		<nav class="breadcrumbs">
			<ol>
				<li><a asp-controller="Home" asp-action="Index">Home</a></li>
				<li class="current">Basket</li>
			</ol>
		</nav>
	</div>
</div><!-- End Page Title -->
<section class="h-100 h-custom">
	<div class="container py-5 h-100">
		<div class="row d-flex justify-content-center align-items-center h-100">
			<div class="col-12">
				<div class="card card-registration card-registration-2" style="border-radius: 15px;">
					<div class="card-body p-0">
						<div class="row g-0">
							<div class="col-lg-8">
								<div class="p-5">
									<div class="d-flex justify-content-between align-items-center mb-5">
										<h1 class="fw-bold mb-0">Shopping Cart</h1>
										<h6 class="mb-0 text-muted">@(Model.Items.Count) items</h6>

									</div>
									<hr class="my-4">




									@foreach (var item in Model.Items)
									{


										<div class="row mb-4 d-flex justify-content-between align-items-center">
											<div class="col-md-2 col-lg-2 col-xl-2">
												<img src="~/uploads/foods/@item.ImageUrl" class="img-fluid rounded-3" alt="">
											</div>
											<div class="col-md-3 col-lg-3 col-xl-3">
												<h6 class="text-muted">@item.Name</h6>
											</div>
											<div class="col-md-3 col-lg-3 col-xl-2 d-flex">
												<button data-mdb-button-init data-mdb-ripple-init class="btn btn-link px-2"
														onclick="this.parentNode.querySelector('input[type=number]').stepDown()">
													<i class="fas fa-minus"></i>
												</button>

												<input id="form1" min="0" name="quantity" value="@item.Quantity" type="number"
													   class="form-control form-control-sm" />

												<button data-mdb-button-init data-mdb-ripple-init class="btn btn-link px-2"
														onclick="this.parentNode.querySelector('input[type=number]').stepUp()">
													<i class="fas fa-plus"></i>
												</button>
											</div>
											<div class="col-md-3 col-lg-2 col-xl-2 offset-lg-1">
												<h6 class="mb-0">€ @item.Price</h6>
											</div>
											<div class="col-md-1 col-lg-1 col-xl-1 text-end">
												<button style="border: none; background: none;" onclick="removeFromBasket(@item.Id)" class="text-muted"><i class="fas fa-times"></i></button>
											</div>
										</div>


									}



									<hr class="my-4">



									<div class="pt-5">
										<h6 class="mb-0">
											<a asp-controller="Menu" asp-action="Index" class="text-body">
												<i class="fas fa-long-arrow-alt-left me-2"></i>Back to shop
											</a>
										</h6>
									</div>
								</div>
							</div>
							<div class="col-lg-4 bg-body-tertiary">
								<div class="p-5">
									<h3 class="fw-bold mb-5 mt-2 pt-1">Summary</h3>
									<hr class="my-4">

									<div class="d-flex justify-content-between mb-4">
										<h5 class="text-uppercase">@(Model.Items.Count) items</h5>
									</div>

									<h5 class="text-uppercase mb-3">Shipping</h5>

									<div class="mb-4 pb-2">
										<select data-mdb-select-init>
											<option value="1">Standard-Delivery- €5.00</option>
										</select>
									</div>
									<hr class="my-4">

									<div class="d-flex justify-content-between mb-5">
										<h5 class="text-uppercase">Total price</h5>
										<h5>€ @Model.TotalPrice.ToString("F2")</h5> <!-- F2 - 2 ondalıklı rəqəm -->
									</div>

									<button type="button" class="btn btn-dark btn-block btn-lg" onclick="checkout()">
										Online Payment
									</button>



								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<script>
		function removeFromBasket(productId) {
		fetch('/Cart/RemoveFromBasket', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/x-www-form-urlencoded'
			},
			body: new URLSearchParams({ productId: productId })
		})
		.then(response => {
			if (!response.ok) {
				throw new Error('Məhsul silinə bilmədi');
			}
			return response.text();
		})
		.then(data => {
			alert("Məhsul silindi!");
			location.reload(); // Səhifəni yenilə, basketi update et
		})
		.catch(error => {
			console.error("Xəta baş verdi:", error);
			alert("Xəta baş verdi!");
		});
	}
	async function checkout() {
		try {
			const response = await fetch('/Cart/Checkout', { method: 'POST' });
			const data = await response.json();

			if (data.url) {
				window.location.href = data.url; // Stripe Checkout səhifəsinə yönləndir
			} else {
				alert("Ödəniş baş tutmadı!");
			}
		} catch (error) {
			console.error("Ödəniş zamanı xəta baş verdi:", error);
			alert("Ödəniş baş tutmadı!");
		}
	}

</script>